name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build and Test Solution
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: 5.x
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  publish-to-nuget:
    name: Publish to Nuget.org
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Publish DynamoDB.Geo.Contract
      uses: brandedoutcast/publish-nuget@v2.5.2
      with:
        PROJECT_FILE_PATH: src/DynamoDB.Geo.Contract/DynamoDB.Geo.Contract.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        VERSION_STATIC: ${{ needs.build.outputs.semVer }}
        PACKAGE_NAME: DynamoDB.GeoSpatial.Contract
    - name: Publish DynamoDB.Geo
      uses: brandedoutcast/publish-nuget@v2.5.2
      with:
        PROJECT_FILE_PATH: src/DynamoDB.Geo/DynamoDB.Geo.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        VERSION_STATIC: ${{ needs.build.outputs.semVer }}
        PACKAGE_NAME: DynamoDB.GeoSpatial